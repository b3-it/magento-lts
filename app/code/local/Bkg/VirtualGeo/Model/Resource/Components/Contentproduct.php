<?php
 /**
  *
  * @category   	Bkg
  * @package    	Bkg_VirtualGeo
  * @name       	Bkg_VirtualGeo_Model_Resource_Components_Formatentity
  * @author 		Holger KÃ¶gel <h.koegel@b3-it.de>
  * @copyright  	Copyright (c) 2017 B3 It Systeme GmbH - http://www.b3-it.de
  * @license		http://sid.sachsen.de OpenSource@SID.SACHSEN.DE
  */
class Bkg_VirtualGeo_Model_Resource_Components_Contentproduct extends Bkg_VirtualGeo_Model_Resource_Components_Componentproduct
{
    public function _construct()
    {
        // Note that the id refers to the key field in your database table.
        $this->_init('virtualgeo/components_content_product', 'id');
    }

    protected function _afterSave(Mage_Core_Model_Abstract $object) {
        $this->_saveAdditional($object);
        return parent::_afterSave($object); // TODO: Change the autogenerated stub
    }

    public function getContentOptionValueTable() {
        return $this->getTable('virtualgeo/components_content_option_value');
    }

    protected function _getOptionValueId($object) {
        if (!($object instanceof Varien_Object)) {
            throw new Varien_Db_Exception("Wrong object type!");
        }

        if (!$object->getId()) {
            throw new Varien_Db_Exception("No ID for object given!");
        }

        $select = $this->getReadConnection()->select()
            ->from($this->getContentOptionValueTable(), 'id')
            ->where('entity_id=?', (int)$object->getId())
        ;

        $row = $this->getReadConnection()->fetchOne($select);

        return is_numeric($row) ? intval($row) : false;
    }

    protected function _saveAdditional(Varien_Object $object)
    {
        if (!$object->getId()) {
            return $this;
        }

        $optionValueItem = new Varien_Object($this->_prepareContentOptionDataForSave($object));
        $optionValueId = $this->_getOptionValueId($optionValueItem);
        if ($optionValueId > 0) {
            $optionValueItem->setId($optionValueId);
            $condition = $this->_getWriteAdapter()->prepareSqlCondition('id', intval($object->getId()));
            $this->_getWriteAdapter()->update($this->getContentOptionValueTable(), $optionValueItem->getData(), $condition);
        } else {
            $optionValueItem->unsetData('id');
            $this->_getWriteAdapter()->insert($this->getContentOptionValueTable(), $optionValueItem->getData());
        }
    }

    protected function _prepareContentOptionDataForSave(Varien_Object $object) {
        return $this->_prepareDataForTable($object, $this->getContentOptionValueTable());
    }

    protected function _loadAdditional(Varien_Object $object)
    {
        $table = $this->getContentOptionValueTable();

        $read = $this->_getReadAdapter();
        if ($read) {
            $condition = $this->getOptionValueConditionById($object->getId());
            $select = $read->select()
                ->from($table, $this->getOptionValueAdditionalFields())
                ->where($condition)
            ;
            $data = $read->fetchRow($select);

            if ($data) {
                $object->addData($data);
            }
        }

        return $this;
    }

    public function getOptionValueConditionById($id) {
        if (!is_numeric($id)) {
            return false;
        }
        return $this->getReadConnection()->prepareSqlCondition($this->getOptionValueEntityIdFieldName(), (int)$id);
    }

    public function getOptionValueEntityIdFieldName() {
        return "entity_id";
    }

    public function getOptionValueAdditionalFields() {
        return array('parent_node_id', 'readonly', 'is_checked');
    }

    protected function _afterLoad(Mage_Core_Model_Abstract $object) {
        parent::_afterLoad($object);

        return $this->_loadAdditional($object);
    }
}

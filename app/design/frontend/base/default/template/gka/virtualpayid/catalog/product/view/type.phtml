<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php /* @var $this Mage_Catalog_Block_Product_View_Abstract */?>
<?php $_product = $this->getProduct() ?>

<?php if ($this->displayProductStockStatus()): ?>
    <?php if ($_product->isAvailable()): ?>
        <p class="availability in-stock"><?php echo $this->__('Availability:') ?> <span><?php echo $this->__('In stock') ?></span></p>
    <?php else: ?>
        <p class="availability out-of-stock"><?php echo $this->__('Availability:') ?> <span><?php echo $this->__('Out of stock') ?></span></p>
    <?php endif; ?>
<?php endif; ?>

<div>
	<label for="kassenzeichen"><?php echo $this->__('Payment code') ?></label>
	<input name="pay_id" class="required-entry" id="pay-id" value="" />
	<button type="button" class="button" onclick="fetchPrice();" id="fetchprice">
	    <?php echo $this->helper('virtualpayid')->__('Fetch Price')?>
	</button>
</div>

<div id="price-container"></div>


<script type="text/javascript">
    var optionsPrice    = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
	var fetch_price_url = "<?php echo $this->getKzInfoUrl(); ?>";
	var diff_price_msg  = "<?php echo $this->__('Amounts are not equal!'); ?>";
	var validator_msg   = "<?php echo $this->__('Please make sure your amounts match.'); ?>";
	var ajax_error_msg  = "<?php echo $this->__('Sorry, there was a problem!'); ?>";

	Validation.add('validate-both-amounts', validator_msg, function(v, input) {
        var dependentInput = $(input.form[input.name == 'amount' ? 'confirmation' : 'amount']),
            isEqualValues  = input.value == dependentInput.value;

        if (isEqualValues && dependentInput.hasClassName('validation-failed')) {
            Validation.test(this.className, dependentInput);
        }
        return dependentInput.value == '' || isEqualValues;
    });

	
	function fetchPrice(){
		//var kz = $j('#pay-id').val();

		$j.ajax({
			'method': 'POST',
			'url'   : fetch_price_url,
			'cache' : false,
			'data'  : {
				'pay_id': $j('#pay-id').val()
		    },
            'beforeSend': function() {
            }
		})
		.done(function (data) {
            $j('#price-container').html(data);
		})
		.fail(function( jqXHR, textStatus ) {
            alert( "Fehler: " + textStatus );
            //alert(ajax_error_msg);
        });		
	}

	function setPrice(amount = false)
	{
		if(amount === false ) {
			amount = $j('#amount').val();
		}
        optionsPrice.changePrice('config', {'price': amount, 'oldPrice': 0});
        optionsPrice.reload();
	}
	
	function validateAmount()
	{
		var amount = $j('#amount').val();
		var amount2 = $j('#confirmation').val();
		if(amount != amount2){
			//alert(diff_price_msg);
			setPrice(0);
		}else{
			setPrice();
		}		
	}

</script>

<?php //echo $this->getChildHtml('product_type_data_extra') ?>
<?php // echo $this->getPriceHtml($_product) ?>

<div class="entry-edit-head">
    <h4><?php echo $this->__('URL Set'); ?></h4>
    <div class="right"><?php echo $this->getAddUrlButtonHtml(); ?></div>
</div>
<div class="fieldset">
    <div class="hor-scroll">
        <div id="url_group_container"></div>
    </div>
</div>

<script type="text/javascript">
//<![CDATA[
var UrlTemplate = '<div class="options-box url_group_container" id="url_group_container_{{id}}">' +
    '<div class="option-box">' +
        '<div class="option-title">' +
            '<?php echo $this->getRemoveUrlButtonHtml(); ?>' +
            '<label for="widget_instance[{{id}}][url_group]"><?php echo $this->__('Page URL'); ?> <span class="required">*</span></label>' +
            '<input type="text" class="input-text" name="widget_instance[{{id}}][url_group]" value="" style="width:75%;" />' +
        '</div>' +
        '<div>' +
            '<label style="padding-right:1em;"><?php echo $this->__('Static Block'); ?> <span class="required">*</span></label>' +
            '<span id="widget_instance_{{id}}_url_block"><?php echo $this->__('Not Selected'); ?></span>' +
            '<input type="hidden" name="widget_instance[{{id}}][url_block]" value="" />' +
            '<div style="padding-top:1em; padding-left:9em;">' +
                '<?php echo $this->getBlockChooserButton(); ?>' +
            '</div>' +
        '</div>' +
    '</div>' +
'</div>';

function initBlockChooser(elementID)
{
    var senderElement = 'chooser' + parseInt(elementID);
    var chooseEvent = new WysiwygWidget.chooser(
        senderElement,
        "<?php echo $this->getSourceUrl(); ?>",
        <?php echo $this->getConfigJson(); ?>
    );

    chooseEvent.choose();
}

var ContextHelp = {
    UrlTemplate     : UrlTemplate,
    ContainerId     : 'url_group_container',
    templatePattern : /(^|.|\r|\n)({{(\w+)}})/,
    count           : 0,
    activeUrlGroups : $H({}),
    selectedItems   : {},

    addUrlGroup: function(data) {
        if (!data.page_id) {
            data          = {};
            data.page_id  = 0;
            data.entities = '';
        }
        data.id = this.count++;

        if (this.UrlTemplate && (UrlContainer = $(this.ContainerId))) {
            TemplateObj = new Template(this.UrlTemplate, this.templatePattern);
            Element.insert(UrlContainer, {'top': TemplateObj.evaluate(data)});
        }
    },
    removeUrlGroup: function(element) {
        container = element.up('div.url_group_container');
        if (container) {
            container.remove();
        }
    }
};
<?php $_urlData = $this->getUrlGroups(); ?>
<?php if(count($_urlData)): ?>
Ext.onReady(function(){
    <?php foreach ($_urlData AS $urlGroup): ?>
        ContextHelp.addUrlGroup(<?php echo Zend_Json::encode($urlGroup); ?>);
    <?php endforeach; ?>
});
<?php endif; ?>
//]]>
</script>
